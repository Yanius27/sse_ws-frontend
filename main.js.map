{"version":3,"file":"main.js","mappings":"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","sources":["webpack://frontend/./src/js/components/ErrorPopup.js","webpack://frontend/./src/index.js","webpack://frontend/./src/js/app.js"],"sourcesContent":["export default class ErrorPopup {\r\n  constructor(message) {\r\n    this.message = message;\r\n    this._element;\r\n    this.#createElement();\r\n  }\r\n\r\n  #createElement() {\r\n    const error = document.createElement('div');\r\n    error.classList.add('error');\r\n\r\n    const errorMessage = document.createElement('span');\r\n    errorMessage.classList.add('error_msg');\r\n    errorMessage.textContent = this.message;\r\n\r\n    error.append(errorMessage);\r\n\r\n    this._element = error;\r\n  }\r\n\r\n  get element() {\r\n    return this._element;\r\n  }\r\n}","import App from './js/app';\r\nimport styles from './css/style.css';\r\n\r\nconst app = new App();\r\n","import ErrorPopup from './components/ErrorPopup';\r\n\r\nexport default class App {\r\n  constructor() {\r\n    this.popup = document.querySelector('.popup');\r\n    this.popupInput = this.popup.querySelector('.popup_nameInput');\r\n\r\n    this.chat = document.querySelector('.chat');\r\n    this.usersList = this.chat.querySelector('.chat_usersList');\r\n    this.chatArea = this.chat.querySelector('.chat_messageArea');\r\n    this.chatForm = this.chat.querySelector('.chat_form');\r\n    this.chatInput = this.chatForm.querySelector('.chat_input');\r\n\r\n    this.users = [];\r\n    this.messages = [];\r\n    this.actualUser;\r\n\r\n    this.serverUrl = 'https://sse-ws-backend-4ra8.onrender.com'\r\n\r\n    this.ws = new WebSocket('wss://sse-ws-backend-4ra8.onrender.com/ws');\r\n\r\n    this.#init();\r\n    this.#wsInit();\r\n    this.#closeListener();\r\n  }\r\n\r\n  // Initialization of app\r\n  async #init() {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      setTimeout(() => this.popup.style.display = 'flex', 1000);\r\n    });\r\n\r\n    this.popup.addEventListener('submit', (e) => { \r\n      e.preventDefault();\r\n\r\n      if (this.popupInput.value === '') {\r\n        const error = new ErrorPopup('Введите имя');\r\n        this.popup.append(error.element);\r\n        setTimeout(() => error.element.remove(), 3000);\r\n        return;\r\n      }\r\n\r\n      this.#addUser(this.popupInput.value);\r\n    });\r\n\r\n  }\r\n\r\n  // Method for creating Date\r\n  #getDate() {\r\n    const currentDate = new Date();\r\n\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n  \r\n    const day = String(currentDate.getDate()).padStart(2, '0');\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Месяцы в JS начинаются с 0, поэтому добавляем 1\r\n    const year = String(currentDate.getFullYear()).slice(2); // Получаем последние две цифры года\r\n  \r\n    const formattedDateTime = `${hours}:${minutes} ${day}.${month}.${year}`;\r\n  \r\n    return formattedDateTime;\r\n  }\r\n\r\n// Initialization of WS and Listeners for WS events\r\n  #wsInit() {\r\n    this.chatForm.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n\r\n      const message = this.chatInput.value;\r\n      \r\n      if (!message) return;\r\n\r\n      const data = JSON.stringify({\r\n        message,\r\n        type: 'send',\r\n        user: this.actualUser,\r\n        date: this.#getDate(),\r\n      });\r\n\r\n      this.ws.send(data);\r\n      this.chatInput.value = '';\r\n    });\r\n\r\n    this.ws.addEventListener('open', (e) => {\r\n      console.log(e);\r\n\r\n      console.log('ws open');\r\n    });\r\n\r\n    this.ws.addEventListener('message', (e) => {\r\n      console.log(e);\r\n      console.log('ws message');\r\n      const data = JSON.parse(e.data);\r\n      if (!data.message) {\r\n        this.users = data;\r\n        this.#drawUsers();\r\n        return;\r\n      }\r\n      if (this.actualUser) {\r\n        this.messages.push(data);\r\n        this.#drawMessages();\r\n      }\r\n    });\r\n\r\n    this.ws.addEventListener('error', (e) => {\r\n      console.log(e);\r\n\r\n      console.log('ws error');\r\n    })\r\n\r\n    this.ws.addEventListener('close', (e) => {\r\n      console.log(e);\r\n\r\n      console.log('ws close');\r\n    })\r\n  }\r\n\r\n  #closeListener() {\r\n    window.addEventListener('unload', () => {\r\n      const data = JSON.stringify({\r\n        type: 'exit',\r\n        user: this.actualUser,\r\n      });\r\n      this.ws.send(data);\r\n    });\r\n  }\r\n\r\n// Users append\r\n  #drawUsers() {\r\n    this.usersList.innerHTML = '';\r\n    this.users.forEach(user => {\r\n      const newUser = document.createElement('div');\r\n      newUser.classList.add('user');\r\n\r\n      const newUserIcon = document.createElement('div');\r\n      newUserIcon.classList.add('user_icon');\r\n\r\n      const newUserName = document.createElement('span');\r\n      newUserName.classList.add('user_name');\r\n      newUserName.textContent = user.name;\r\n\r\n      newUser.append(newUserIcon, newUserName);\r\n\r\n      this.usersList.append(newUser);\r\n    });\r\n  }\r\n\r\n// Messages append\r\n  #drawMessages() {\r\n    this.chatArea.innerHTML = '';\r\n    this.messages.forEach(msg => {\r\n      const message = document.createElement('div');\r\n      message.classList.add('message');\r\n\r\n      if (msg.user.id === this.actualUser.id) {\r\n        message.classList.add('actualUserMsg');\r\n      }\r\n\r\n      const messageInfo = document.createElement('span');\r\n      messageInfo.classList.add('message_info');\r\n      messageInfo.textContent = msg.user.name + ', ' + msg.date;\r\n\r\n      const messageText = document.createElement('div');\r\n      messageText.classList.add('message_text');\r\n      messageText.textContent = msg.message;\r\n\r\n      message.append(messageInfo, messageText);\r\n\r\n      this.chatArea.append(message);\r\n    });\r\n  }\r\n\r\n// AJAX for creating new user\r\n  #addUser(value) {\r\n    const body = JSON.stringify({ name: value });\r\n    fetch(this.serverUrl + '/new-user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body,\r\n    })\r\n      .then(response => {\r\n        if (response.status !== 207) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Response status is 207');\r\n        }\r\n      })\r\n      .then(result => {\r\n        if (result.status === 'ok') {\r\n          this.actualUser = result.user;\r\n          this.users.push(result.user);\r\n          this.popup.style.display = 'none';\r\n          this.chat.style.display = 'flex';\r\n          this.usersList.style.display = 'flex';\r\n        } else {\r\n          const error = new ErrorPopup(result.message);\r\n          this.popup.append(error.element);\r\n          setTimeout(() => error.element.remove(), 4000);\r\n          return;\r\n        }\r\n      })\r\n      .then(() => {\r\n        const data = JSON.stringify({ type: 'getUsers' });\r\n        this.ws.send(data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n"],"names":["ErrorPopup","constructor","message","this","_element","error","document","createElement","classList","add","errorMessage","textContent","append","element","popup","querySelector","popupInput","chat","usersList","chatArea","chatForm","chatInput","users","messages","actualUser","serverUrl","ws","WebSocket","addEventListener","setTimeout","style","display","e","preventDefault","value","remove","currentDate","Date","String","getHours","padStart","getMinutes","getDate","getMonth","getFullYear","slice","data","JSON","stringify","type","user","date","send","console","log","parse","push","window","innerHTML","forEach","newUser","newUserIcon","newUserName","name","msg","id","messageInfo","messageText","body","fetch","method","headers","then","response","status","json","Error","result","catch","err"],"sourceRoot":""}